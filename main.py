
import os
import telebot
from datetime import datetime
from collections import defaultdict

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã
TOKEN = os.getenv("BOT_TOKEN")
bot = telebot.TeleBot(TOKEN)

# –°–ø–∏—Å–∫–∏ –¥–æ—Å—Ç—É–ø–∞
AUTHORIZED_USERS = ["SukhrobAbdurazzakov", "revivemd"]

# –•—Ä–∞–Ω–∏–ª–∏—â–µ
cash_balance = 0
debts = []
we_owe = []
incomes = []
expenses = []
categories = defaultdict(lambda: {"income": 0, "expense": 0})

# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
def is_authorized(message):
    return message.from_user.username in AUTHORIZED_USERS

# –ö–æ–º–∞–Ω–¥—ã
@bot.message_handler(commands=['start'])
def send_welcome(message):
    if is_authorized(message):
        bot.reply_to(message, f"üëã –ü—Ä–∏–≤–µ—Ç, @{message.from_user.username}! Razzakov‚Äôs Bot –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")
    else:
        bot.reply_to(message, "‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.")

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    global cash_balance

    if not is_authorized(message):
        return

    msg = message.text.strip()

    try:
        if msg.startswith("+–¥–æ—Ö–æ–¥"):
            parts = msg.split()
            amount = int(parts[1])
            category = parts[2].lower()
            comment = " ".join(parts[3:])
            incomes.append((datetime.now(), amount, category, comment))
            cash_balance += amount
            categories[category]["income"] += amount
            bot.reply_to(message, f"‚úÖ –î–æ—Ö–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω: {amount}$ ({category}) ‚Äì {comment}")

        elif msg.startswith("-—Ä–∞—Å—Ö–æ–¥"):
            parts = msg.split()
            amount = int(parts[1])
            category = parts[2].lower()
            comment = " ".join(parts[3:])
            expenses.append((datetime.now(), amount, category, comment))
            cash_balance -= amount
            categories[category]["expense"] += amount
            bot.reply_to(message, f"üí∏ –†–∞—Å—Ö–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω: {amount}$ ({category}) ‚Äì {comment}")

        elif msg.startswith("+–¥–æ–ª–≥"):
            parts = msg.split()
            amount = int(parts[1])
            name = parts[2]
            debts.append((datetime.now(), amount, name))
            bot.reply_to(message, f"üßæ –î–æ–±–∞–≤–ª–µ–Ω –¥–æ–ª–≥: {name} –¥–æ–ª–∂–µ–Ω {amount}$")

        elif msg.startswith("-–≤–µ—Ä–Ω—É–ª"):
            parts = msg.split()
            amount = int(parts[1])
            name = parts[2]
            debts[:] = [d for d in debts if d[2] != name]
            cash_balance += amount
            bot.reply_to(message, f"‚úÖ {name} –≤–µ—Ä–Ω—É–ª {amount}$")

        elif msg.startswith("+–º—ã–¥–æ–ª–∂–Ω—ã"):
            parts = msg.split()
            amount = int(parts[1])
            name = parts[2]
            we_owe.append((datetime.now(), amount, name))
            bot.reply_to(message, f"üìå –í—ã –¥–æ–ª–∂–Ω—ã {name}: {amount}$")

        elif msg == "–∫–∞—Å—Å–∞":
            bot.reply_to(message, f"üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {cash_balance}$")

        elif msg == "–æ–±—â–∞—è–∫–∞—Å—Å–∞":
            total_debts = sum(d[1] for d in debts)
            total_we_owe = sum(w[1] for w in we_owe)
            total = cash_balance + total_debts - total_we_owe
            bot.reply_to(message, f"üíº –û–±—â–∞—è –∫–∞—Å—Å–∞ (–µ—Å–ª–∏ –≤—Å–µ –≤–µ—Ä–Ω—É—Ç): {total}$")

        elif msg == "–¥–æ–ª–≥–∏":
            text = "üìä –î–æ–ª–≥–∏:
"
            for d in debts:
                text += f"- {d[2]} –¥–æ–ª–∂–µ–Ω {d[1]}$
"
            text += "
üìå –ú—ã –¥–æ–ª–∂–Ω—ã:
"
            for w in we_owe:
                text += f"- {w[2]}: {w[1]}$
"
            bot.reply_to(message, text)

        elif msg == "–∫–∞—Ç–µ–≥–æ—Ä–∏–∏":
            text = "üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏:
"
            for cat, val in categories.items():
                text += f"- {cat.title()}: –¥–æ—Ö–æ–¥ {val['income']}$ / —Ä–∞—Å—Ö–æ–¥ {val['expense']}$
"
            bot.reply_to(message, text)

        elif msg == "–æ—Ç—á—ë—Ç –º–µ—Å—è—Ü":
            text = "üìÖ –û—Ç—á—ë—Ç –∑–∞ –º–µ—Å—è—Ü:
"
            total_income = sum(x[1] for x in incomes)
            total_expense = sum(x[1] for x in expenses)
            net = total_income - total_expense
            text += f"–î–æ—Ö–æ–¥–æ–≤: {total_income}$
–†–∞—Å—Ö–æ–¥–æ–≤: {total_expense}$
–ß–∏—Å—Ç—ã–π –∏—Ç–æ–≥: {net}$
"
            bot.reply_to(message, text)

    except Exception as e:
        bot.reply_to(message, f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")

# –ó–∞–ø—É—Å–∫
bot.polling()
